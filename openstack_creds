#!/bin/sh
# Script to make managing OpenStack credentials easier.
# To be used in combination with the .bashrc functions below.
#
# This script provides the following commands:
#   * chchreds to change which credentials to load
#   * creds    to load the existing credentials in a new environment
#   * rmcreds  to clear the current credentials from your current environment
#
# First, add the following to your .bashrc:
#
#  function creds() {
#      if [ -f $HOME/.openstack-creds/.creds ]; then
#          . $HOME/.openstack-creds/.creds
#          echo "$OS_CRED_FILE"
#      else
#          chcreds
#      fi
#  }
#  function rmcreds() {
#      for v in $(env | grep -E '^OS_' | sed 's/=.*//'); do unset $v; done
#  }
#  function prcreds {
#      env | grep -E '^OS_'
#  }
#  function chcreds() {
#      rmcreds && openstack_creds "$1" && creds
#  }
#
# Then add any OpenStack credentials files to ~/.openstack-creds
#
# The format of the credential files should look something like this:
#
#   export OS_AUTH_URL=http://keystone.domain.name:5000/v3/
#   export OS_NO_CACHE=true
#   export OS_PROJECT_NAME=tenant
#   export OS_USERNAME=username
#   export OS_PASSWORD=password
#
# And optionally, you could add this for adding the currently
# loaded credentials to your bash prompt:
#
# function os_creds {
#     [ -z $OS_CRED_FILE ] || echo " ${OS_CRED_FILE}"
# }
#
# Add add $(os_creds) to your PS1 var. For example (coloured):
#
# PS1='\[\033[01;32m\]\u@\h\[\033[01;34m\] \w\[\033[01;33m\]$(os_creds)\[\033[00m\] \$ '
#
# Andy Botting <andy@andybotting.com>

# Where we stash our files.
CREDS_DIR=$HOME/.openstack-creds

# creds file - used to stash your current settings.  This does contains
# passwords in clear text, but is stored with 0600 perms so should be for your
# eyes only.
CREDS=$CREDS_DIR/.creds

choose() {
    QUEST=$1
    VAR=$2
    eval DEF=\$$VAR
    shift 2
    DEF_MATCHED=0
    for X in $*; do
        if [ "$DEF" = "$X" ]; then
            DEF_MATCHED=1
            break
        fi
    done
    if [ $DEF_MATCHED -eq 0 ]; then
        DEF=$1
    fi
    CHOICE=""
    while [ ! "$CHOICE" ]; do
        echo "$QUEST: "
        OPT=1
        for X in $*; do
            printf "%3.d) $X\n" $OPT
            eval CHOICE_N$OPT=$X
            OPT=`expr $OPT + 1`
        done
        echo -n "[$DEF]: "
        read ANS
        if [ "x$ANS" = "x" ]; then
            CHOICE=$DEF
        else
            case $ANS in
                [[:digit:]]*)
                    if [ $ANS -gt 0 -a $ANS -le $# ]; then
                        eval CHOICE=\$CHOICE_N$ANS
                    fi;;
            esac
        fi
    done
    eval $VAR=$CHOICE
}

test -d $CREDS_DIR || mkdir -p $CREDS_DIR && chmod 0700 $CREDS_DIR

CRED_FILES=$(ls $CREDS_DIR)

if [ -z "$CRED_FILES" ]; then
    echo "No credential files stored in $CREDS_DIR"
    exit 1
fi

if [ ! -z "$1" ]; then
    CRED_FILE=$1
    if [ ! -f $CREDS_DIR/$CRED_FILE ]; then
        echo "Credential file $CRED_FILE not found"
        exit 1
    fi
else
    choose 'Choose credential file' CRED_FILE $CRED_FILES
fi

echo "export OS_CRED_FILE=$CRED_FILE" > $CREDS
cat $CREDS_DIR/$CRED_FILE >> $CREDS

chmod 0600 $CREDS
. $CREDS
exit 0
