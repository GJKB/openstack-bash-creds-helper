#!/bin/bash
# Script to make managing OpenStack credentials with password store easy.
# To be used in combination with the functions in bash-functions file
#
# This script provides the following commands:
#   * chchreds to change which credentials to load
#   * creds    to load the existing credentials in a new environment
#   * rmcreds  to clear the current credentials from your current environment
#
# First you'll need to source the bash-functions file. This is best done from
# within your ~/.bashrc file:
#
#  . ~/projects/openstack-bash-creds-helper/bash-functions
#
# Then add any OpenStack credentials files to pass, with a .openrc extension
# for each of your openrc environment files.
#
# The format of the credential files should look something like this:
#
#   export OS_AUTH_URL=http://keystone.domain.name:5000/v3/
#   export OS_NO_CACHE=true
#   export OS_PROJECT_NAME=tenant
#   export OS_USERNAME=username
#   export OS_PASSWORD=password
#
# And optionally, you could add the os_creds function to your bash prompt to
# give you the currently loaded credentials in your PS1
#
# PS1='\[\033[01;32m\]\u@\h\[\033[01;34m\] \w\[\033[01;33m\]$(os_creds)\[\033[00m\] \$ '
#
# Andy Botting <andy@andybotting.com>

CHCREDS="${CHCRED_FILE:-$HOME/.chcred}"
PSDIR="${PASSWORD_STORE_DIR:-$HOME/.password-store/}"
PSDIR="${PSDIR%/}/"
MATCH=".openrc"
SUFFIX=".gpg"

choose() {
    QUEST=$1
    VAR=$2
    eval DEF=\$$VAR
    shift 2
    CHOICE=""
    # Match any given options
    case $DEF in
        [[:digit:]]*)
            opt=1
            for x in $*; do
                if [ "$DEF" = "$opt" ]; then
                    CHOICE=$x
                    break
                fi
                opt=$((opt+1))
            done
        ;;
        [[:alpha:]]*)
            for x in $*; do
                if [ "$DEF$MATCH" = "$x" ]; then
                    CHOICE=$x
                    break
                fi
            done
        ;;
    esac

    # Show list of choices
    if [ -z $CHOICE ]; then
		[ -f $CHCREDS ] && DEF=$(cat $CHCREDS)

		DEF_MATCHED=0
		for X in $*; do
			if [ "$DEF" = "$X" ]; then
				DEF_MATCHED=1
				break
			fi
		done
		if [ $DEF_MATCHED -eq 0 ]; then
			DEF=$1
		fi
		while [ ! "$CHOICE" ]; do
			echo "$QUEST: "
			opt=1
			for x in $*; do
				printf "%3.d) ${x%$MATCH}\n" $opt
				eval CHOICE_N$opt=$x
                opt=$((opt+1))
			done
			echo -n "[${DEF%$MATCH}]: "
			read ANS
			if [ "x$ANS" = "x" ]; then
				CHOICE=$DEF
			else
				case $ANS in
					[[:digit:]]*)
						if [ $ANS -gt 0 -a $ANS -le $# ]; then
							eval CHOICE=\$CHOICE_N$ANS
						fi
                    ;;
				esac
			fi
		done
    fi

    eval $VAR=$CHOICE
}

# Discover credential files in pass
for c in $(find -L $PSDIR -type f -name "*$MATCH$SUFFIX" | sort); do
    c="${c#$PSDIR}"
    c="${c%$SUFFIX}"
    creds="$creds $c"
done

[ ! -z "$1" ] && cred=$1

choose 'Choose credential file' cred $creds

echo $cred > $CHCREDS
exit 0
